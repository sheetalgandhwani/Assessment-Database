                                        ASSESEMENT- DATABASE
                           ------------------------------------------------


 . Write SQL query to solve the problem given below:


                                   Table 1:  City
                                  ================= 

step:1 
-------  

      CREATE TABLE city(id int(3) not null primary key,city_name varchar(50),lat real,longg REAL,
       country_id int(5));

step:2
-------

    INSERT INTO `city` (`id`, `city_name`, `lat`, `longg`, `country_id`) VALUES ('1', 'Berlin', '52.520008',     '13.404954', '1');

   INSERT INTO `city` (`id`, `city_name`, `lat`, `longg`, `country_id`) VALUES ('2', 'Belgrade', '44.787197', '20.457273', '2');

   INSERT INTO `city` (`id`, `city_name`, `lat`, `longg`, `country_id`) VALUES ('3', 'Zagreb', '45.815399', '15.9666568', '3');

  INSERT INTO `city` (`id`, `city_name`, `lat`, `longg`, `country_id`) VALUES ('4', 'New York', '40.730610', '-73.935242', '4');

  INSERT INTO `city` (`id`, `city_name`, `lat`, `longg`, `country_id`) VALUES ('5', 'Los Angeles', '34.052235', '-118.243683', '4');


 INSERT INTO `city` (`id`, `city_name`, `lat`, `longg`, `country_id`) VALUES ('6', 'Warsaw', '52.237049', '21.017532', '5');

--------------------------------------------------------------------------------------------------------------
   
                                          Table 2: Customer
                                        ========================

step:1
-------

       CREATE TABLE Customer(id int(5) not null primary key,customer_name varchar(50),city_id 
         int(4),customer_address varchar(60), next_call_date date,ts_inserted datetime);


 step 2:
-------

 INSERT INTO `customer` (`id`, `customer_name`, `city_id`, `customer_address`, `next_call_date`,`ts_inserted`)  VALUES ('1', 'Jewelry Store', '4', 'Long Street 120', '2020-01-21', '2020-01-09 14:01:20');
  
INSERT INTO `customer` (`id`, `customer_name`, `city_id`, `customer_address`, `next_call_date`, `ts_inserted`) VALUES ('2', 'Bakery', '1', 'Kurfurstendamm 25', '2020-02-21', '2020-01-09 17:52:15');

INSERT INTO `customer` (`id`, `customer_name`, `city_id`, `customer_address`, `next_call_date`, `ts_inserted`) VALUES ('3', 'Cafe', '1', 'Tauentzienstrade 44', '2020-01-21', '2020-01-10 08:02:49');

INSERT INTO `customer` (`id`, `customer_name`, `city_id`, `customer_address`, `next_call_date`, `ts_inserted`) VALUES ('4', 'Restaurant', '3', 'Ulica lipa 15', '2020-01-21', '2020-01-10 09:20:21');


--------------------------------------------------------------------------------------------------------------

                                             Table 3: Country
                                            ====================

step 1:
--------

      CREATE TABLE Country(id int(5) not null primary key,country_name varchar(40),country_name_eng varchar(40),country_code varchar(20));


step 2:
-------


INSERT INTO `country` (`id`, `country_name`, `country_name_eng`, `country_code`) VALUES ('1', 'Deutschland', 'Germany', 'DEU');

INSERT INTO `country` (`id`, `country_name`, `country_name_eng`, `country_code`) VALUES ('2', 'Srbija', 'Serbia', 'SRB');

INSERT INTO `country` (`id`, `country_name`, `country_name_eng`, `country_code`) VALUES ('3', 'Hrvatska', 'Croatia', 'HRV');

INSERT INTO `country` (`id`, `country_name`, `country_name_eng`, `country_code`) VALUES ('4', 'United States of America', 'United States of America', 'USA');

INSERT INTO `country` (`id`, `country_name`, `country_name_eng`, `country_code`) VALUES ('5', 'Polska', 'Poland', 'POL');

INSERT INTO `country` (`id`, `country_name`, `country_name_eng`, `country_code`) VALUES ('6', 'Espana', 'Spain', 'ESP');

INSERT INTO `country` (`id`, `country_name`, `country_name_eng`, `country_code`) VALUES ('7', 'Rossiya', 'Russia', 'RUS');

​--------------------------------------------------------------------------------------------------------------
  

Task 1:- (join multiple tables using left join)
 =======   

         List all countries and customers related cities and customers.
    
         For each country displaying its name and name of the customer.

Ans:
           select customer.customer_name ,country.country_name from customer LEFT JOIN country on                                       
​             customer.id=country.id;

--------------------------------------------------------------------------------------------------------------
 

Task 2:-
 ==========            (join multiple tables using both left and inner join)


         Return the list of all countries that have pairs(exclude countries which are not referenced by any
           city). For such pairs return all customers.


         Return even pairs of not having a single customer.


Ans:   LEFT JOIN:
      -------------

         select country.id,country.country_name,country.country_name_eng,country.country_code,      
            customer.customer_name from country                                
          LEFT JOIN customer ON country.id=customer.id;

     
      INNER JOIN:
      --------------

      SELECT country.country_name,customer.customer_name,customer.city_id FROM country INNER JOIN customer ON              
        country.id=customer.id;

==============|============|================|==================|=================|===============|===========|





